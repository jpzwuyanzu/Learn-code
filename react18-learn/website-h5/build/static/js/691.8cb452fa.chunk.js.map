{"version":3,"file":"static/js/691.8cb452fa.chunk.js","mappings":"4RAQe,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAiB9B,OAPAC,EAAAA,EAAAA,YAAU,WAEN,OADAP,GAASQ,EAAAA,EAAAA,IAAa,CAAEC,QAAQ,KACzB,WACLT,GAASQ,EAAAA,EAAAA,IAAa,CAAEC,QAAQ,IAClC,CAEJ,GAAG,KAEC,iBAAKC,UAAYC,EAAAA,QAAAA,gBAAwB,WACrC,gBAAKD,UAAYC,EAAAA,QAAAA,SAAiB,UAC9B,gBAAKD,UAAYC,EAAAA,QAAAA,KAAcC,IAAMC,EAAUC,IAAI,QAEvD,gBAAKJ,UAAYC,EAAAA,QAAAA,gBAAwB,UACzC,UAAC,KAAI,CAACI,OAAO,aAAaC,KAAK,OAAON,UAAYC,EAAAA,QAAAA,QAC9CM,KAAK,OACLC,SAvBK,SAACC,GAClBC,QAAQC,IAAIF,GACTA,EAAOG,OAASH,EAAOI,aACtBC,aAAaC,QAAQ,QAASN,EAAOG,OACrCpB,EAAS,WAEf,EAkBcwB,QACA,SAAC,KAAM,CAACC,KAAK,SAASC,OAAK,EAACC,MAAM,UAAUC,KAAK,SAAQ,0BAGxD,WAED,SAAC,UAAS,CACVC,OAAO,iBAAMrB,UAAYL,EAAYM,EAAAA,QAAAA,qBAA+BA,EAAAA,QAAAA,kBAA0B,4CAC9FM,KAAK,QAAO,UAER,SAAC,KAAK,CAACe,YAAY,qBAAML,KAAK,QAASM,UAAW,GAAIC,WAAS,EAACxB,UAAYC,EAAAA,QAAAA,SAAkBwB,SAAW,SAACC,GACrF,KAAjBA,EAAMC,OAAgB/B,GAAa,GAAQA,GAAa,EAC5D,OAEJ,SAAC,UAAS,CACVW,KAAK,aAAY,UACZ,SAAC,KAAK,CAACe,YAAY,qBAAME,WAAS,EAACxB,UAAYC,EAAAA,QAAAA,oBAMpE,C,8BC1DA,WAAgB,gBAAkB,+BAA+B,SAAW,wBAAwB,KAAO,oBAAoB,gBAAkB,+BAA+B,kBAAoB,iCAAiC,qBAAuB,oCAAoC,SAAW,wBAAwB,QAAU,uB","sources":["views/login/Login.tsx","webpack://maizuo/./src/views/login/Login.module.scss?5eca"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useAppDispatch } from '../../hooks/redux-hook'\nimport { switchTabBar } from '../../store/tabbar.slice'\nimport styles from './Login.module.scss'\nimport loginBg from '../../assets/imgs/logo.png'\nimport { Form, Input, Button } from 'antd-mobile'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function Login() {\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    const [canVerify, setCanVerify] = useState(false);\n    \n    const onFinish = (values: any) => {\n    console.log(values)\n    if(values.phone && values.verifyCode) {\n        localStorage.setItem('token', values.phone)\n        navigate('/center')\n    }\n  }\n\n    useEffect(() => {\n        dispatch(switchTabBar({ status: false }))\n        return () => {\n          dispatch(switchTabBar({ status: true }))\n        }\n        // eslint-disable-next-line\n    }, [])\n    return (\n        <div className={ styles.login_container }>\n            <div className={ styles.login_bg }>\n                <img className={ styles.logo } src={ loginBg } alt=\"\"/>\n            </div>\n            <div className={ styles.login_Form_part }>\n            <Form layout='horizontal' mode='card' className={ styles.my_form }\n                name='form'\n                onFinish={onFinish}\n                footer={\n                <Button type='submit' block color='primary' size='middle'>\n                    登录\n                </Button>\n                }\n            >\n                <Form.Item  \n                extra={<span className={ canVerify ? styles.activeVerifyCode_btn :  styles.getVerifyCode_btn }>获取验证码</span>}\n                name=\"phone\"\n                >\n                    <Input placeholder='手机号' type=\"sting\"  maxLength={11} clearable className={ styles.my_input } onChange={ (value: string) => {\n                        value.length === 11 ? setCanVerify(true) : setCanVerify(false)\n                    } } />\n                </Form.Item>\n                <Form.Item \n                name=\"verifyCode\">\n                     <Input placeholder='验证码' clearable className={ styles.my_input } />\n                </Form.Item>\n            </Form>\n            </div>\n        </div>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"login_container\":\"Login_login_container__oFUJo\",\"login_bg\":\"Login_login_bg__2ox-w\",\"logo\":\"Login_logo__r8TVd\",\"login_Form_part\":\"Login_login_Form_part__XJRx8\",\"getVerifyCode_btn\":\"Login_getVerifyCode_btn__012sN\",\"activeVerifyCode_btn\":\"Login_activeVerifyCode_btn__18LKd\",\"my_input\":\"Login_my_input__n-H8m\",\"my_form\":\"Login_my_form__VOto1\"};"],"names":["Login","dispatch","useAppDispatch","navigate","useNavigate","useState","canVerify","setCanVerify","useEffect","switchTabBar","status","className","styles","src","loginBg","alt","layout","mode","name","onFinish","values","console","log","phone","verifyCode","localStorage","setItem","footer","type","block","color","size","extra","placeholder","maxLength","clearable","onChange","value","length"],"sourceRoot":""}