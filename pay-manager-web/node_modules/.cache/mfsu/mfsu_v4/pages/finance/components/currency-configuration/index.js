import { Modal, message } from "antd";
import { useRef, useState } from "react";
import { useModel } from "@@/exports";
import {
  ProForm,
  ProFormSelect
} from "@ant-design/pro-components";
export default (props) => {
  const {
    getMerchantOptionItems,
    getCurrencyOptionItems,
    getFirstCurrencyOption
  } = useModel("global");
  const formRef = useRef();
  const [isModalOpen, setIsModalOpen] = useState(false);
  const { record, request } = props;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("a", { onClick: () => setIsModalOpen(true) }, "\u5E01\u79CD\u914D\u7F6E"), /* @__PURE__ */ React.createElement(
    Modal,
    {
      title: "\u5E01\u79CD\u914D\u7F6E",
      open: isModalOpen,
      footer: null,
      width: 600,
      destroyOnClose: true,
      onCancel: () => {
        setIsModalOpen(false);
      }
    },
    /* @__PURE__ */ React.createElement(
      ProForm,
      {
        formRef,
        initialValues: {
          currencyCodes: record?.currency ? record?.currency.split(",").map((item) => item) : []
        },
        onFinish: async (values) => {
          await request({
            id: +record.id,
            currencyCodes: values.currencyCodes
          });
          message.success("\u8BBE\u7F6E\u6210\u529F");
          setIsModalOpen(false);
          props?.reload();
        },
        onReset: () => {
          formRef.current?.setFieldValue("currencyCodes", []);
        }
      },
      /* @__PURE__ */ React.createElement(
        ProFormSelect,
        {
          request: async () => getCurrencyOptionItems(null),
          mode: "multiple",
          label: "\u652F\u6301\u5E01\u79CD\u9009\u62E9",
          name: "currencyCodes",
          rules: [
            {
              required: true,
              message: "\u8BF7\u9009\u62E9\u652F\u6301\u5E01\u79CD"
            }
          ]
        }
      )
    )
  ));
};
