import services from "@/services";
import { Button, message } from "antd";
import { useRef, useState } from "react";
import common from "@/utils/common";
import {
  ModalForm,
  ProFormDigit
} from "@ant-design/pro-components";
import { useAsyncEffect } from "ahooks";
export default () => {
  const formRef = useRef();
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [minAmount, setMinAmount] = useState(0);
  useAsyncEffect(async () => {
    const result = await services.finance.withdrawInfoManage.getStrategy();
    setMinAmount(result?.reserveAmount);
  }, []);
  return /* @__PURE__ */ React.createElement(
    ModalForm,
    {
      layout: "horizontal",
      formRef,
      title: "\u4FDD\u7559\u91D1\u989D\u8BBE\u7F6E",
      open: isModalOpen,
      width: 600,
      trigger: /* @__PURE__ */ React.createElement(Button, { onClick: () => setIsModalOpen(true) }, "\u4FDD\u7559\u91D1\u989D\u8BBE\u7F6E"),
      onFinish: async (formData) => {
        await services.finance.withdrawInfoManage.saveMinAmount(formData);
        message.success("\u914D\u7F6E\u6210\u529F");
        setIsModalOpen(false);
      },
      modalProps: {
        onCancel: () => setIsModalOpen(false)
      }
    },
    /* @__PURE__ */ React.createElement(
      ProFormDigit,
      {
        label: "\u4FDD\u7559\u91D1\u989D",
        name: "reserveAmount",
        initialValue: minAmount,
        rules: [common.ruleUtils.getRule("required", "\u8BF7\u8F93\u5165\u4FDD\u7559\u91D1\u989D")]
      }
    )
  );
};
