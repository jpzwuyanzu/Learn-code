import services from "@/services";
import { Button, message } from "antd";
import { useRef, useState } from "react";
import common from "@/utils/common";
import {
  ModalForm,
  ProFormDigit
} from "@ant-design/pro-components";
import { useAsyncEffect } from "ahooks";
export default () => {
  const formRef = useRef();
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [config, setConfig] = useState({
    accountBindCount: 2,
    dayWithdrawCount: 10,
    orderNoFinishCount: 1
  });
  useAsyncEffect(async () => {
    const result = await services.finance.withdrawInfoManage.getStrategy();
    setConfig(result);
  }, []);
  return /* @__PURE__ */ React.createElement(
    ModalForm,
    {
      formRef,
      title: "\u63D0\u73B0\u673A\u5236\u8BBE\u7F6E",
      open: isModalOpen,
      width: 600,
      trigger: /* @__PURE__ */ React.createElement(Button, { onClick: () => setIsModalOpen(true) }, "\u63D0\u73B0\u673A\u5236\u8BBE\u7F6E"),
      onFinish: async (formData) => {
        await services.finance.withdrawInfoManage.saveStrategy(formData);
        message.success("\u914D\u7F6E\u6210\u529F");
        setIsModalOpen(false);
      },
      modalProps: {
        onCancel: () => setIsModalOpen(false)
      },
      initialValues: config
    },
    /* @__PURE__ */ React.createElement(
      ProFormDigit,
      {
        label: "\u540C\u51FA\u6B3E\u8D26\u53F7\u53EF\u4EE5\u7ED1\u5B9AID\u6570",
        name: "accountBindCount",
        rules: [common.ruleUtils.getRule("required")]
      }
    ),
    /* @__PURE__ */ React.createElement(
      ProFormDigit,
      {
        label: "\u6BCF\u65E5\u63D0\u73B0\u603B\u6B21\u6570",
        name: "dayWithdrawCount",
        rules: [common.ruleUtils.getRule("required")]
      }
    ),
    /* @__PURE__ */ React.createElement(
      ProFormDigit,
      {
        label: "\u540C\u65F6\u5141\u8BB8\u672A\u5B8C\u6210\u8BA2\u5355\u7B14\u6570",
        name: "orderNoFinishCount",
        rules: [common.ruleUtils.getRule("required")]
      }
    )
  );
};
