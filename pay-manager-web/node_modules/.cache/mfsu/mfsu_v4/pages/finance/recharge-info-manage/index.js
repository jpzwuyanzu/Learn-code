import { TablePage } from "@/components";
import services from "@/services";
import { useModel } from "@@/exports";
import { Tag } from "antd";
import { WithdrawExchangeTypeOptions } from "@/constants";
import CurrencyConfiguration from "../components/currency-configuration";
import MerchantConfiguration from "../components//merchant-configuration";
import common from "@/utils/common";
import UpdateModal from "@/pages/finance/recharge-info-manage/update-modal";
import { useRef } from "react";
import CurrencyRateConfiguration from "@/pages/finance/components/currency-rate-configuration";
export default () => {
  const tableRef = useRef();
  const {
    getMerchantOptionItems,
    getFirstMerchantOption,
    getCurrencyOptionItems,
    getFirstCurrencyOption
  } = useModel("global");
  const columns = [
    {
      title: "\u5546\u57CE\u9875\u7B7E",
      dataIndex: "id",
      valueType: "select",
      request: async () => WithdrawExchangeTypeOptions,
      hideInSearch: true,
      hideInForm: true,
      render: (text, record) => "USDT"
    },
    {
      title: "\u5E01\u79CD",
      dataIndex: "currency",
      valueType: "select",
      request: async () => getCurrencyOptionItems(),
      fieldProps: {
        allowClear: false,
        defaultValue: ""
      },
      hideInForm: true,
      hideInTable: true
    },
    {
      title: "\u8DF3\u8F6C\u65B9\u5F0F",
      dataIndex: "jumpType",
      valueType: "radio",
      request: async () => [
        { label: "USDT\u4FE1\u606F", value: 1 },
        { label: "\u94FE\u63A5", value: 2 }
      ],
      initialValue: 1,
      hideInSearch: true,
      order: 5
    },
    {
      title: "\u6E29\u99A8\u63D0\u793A",
      dataIndex: "kindTips",
      hideInSearch: true,
      hideInTable: true
    },
    {
      title: "\u6559\u7A0B\u94FE\u63A5",
      dataIndex: "tutorialUrl",
      hideInSearch: true
    },
    {
      title: "USDT\u4FE1\u606F/\u8DF3\u8F6C\u94FE\u63A5",
      dataIndex: "content",
      hideInSearch: true,
      render: (text, record) => {
        const items = JSON.parse(record?.content || "[]");
        return record?.jumpType === 1 ? items.map((item, index) => /* @__PURE__ */ React.createElement("div", { key: index }, /* @__PURE__ */ React.createElement("span", null, item?.address, "\uFF1A"), /* @__PURE__ */ React.createElement("span", null, item?.showRate, "%"))) : record?.jumpUrl;
      },
      formItemProps: {
        rules: [common.ruleUtils.getRule("required")]
      }
    },
    {
      title: "\u4ECA\u65E5\u6536\u6B3E\u91D1\u989D",
      dataIndex: "todayAmount",
      hideInSearch: true,
      hideInForm: true
    },
    {
      title: "\u5145\u503CU\u6570\u91CF",
      dataIndex: "minRecharge",
      hideInSearch: true,
      hideInForm: true,
      render: (text, record) => {
        return `${record?.minRecharge} - ${record?.maxRecharge}`;
      }
    },
    {
      title: "\u5145\u503CU\u989D\u5EA6",
      dataIndex: "recharge",
      valueType: "digitRange",
      formItemProps: {
        rules: [common.ruleUtils.getRule("required")]
      },
      hideInSearch: true,
      hideInTable: true,
      order: 2
    },
    {
      title: "\u72B6\u6001",
      dataIndex: "status",
      valueType: "select",
      request: async () => [
        { label: "\u5168\u90E8", value: "" },
        { label: "\u5F00\u542F", value: 1 },
        { label: "\u5173\u95ED", value: 2 }
      ],
      render: (text, record) => {
        return /* @__PURE__ */ React.createElement(Tag, { color: record?.status === 1 ? "green" : "red" }, text);
      },
      fieldProps: {
        allowClear: false,
        defaultValue: ""
      },
      hideInForm: true
    },
    {
      title: "\u66F4\u65B0\u65F6\u95F4",
      dataIndex: "updateTime",
      valueType: "dateTimeRange",
      fieldProps: {
        placeholder: ["\u5F00\u59CB\u65F6\u95F4", "\u7ED3\u675F\u65F6\u95F4"]
      },
      render: (text, record) => record?.updateTime,
      hideInSearch: true,
      hideInForm: true
    }
  ];
  return /* @__PURE__ */ React.createElement(
    TablePage,
    {
      tableRef,
      columns,
      listRequest: services.finance.rechargeInfoManage.list,
      changeStatusRequest: services.finance.rechargeInfoManage.changeStatus,
      changeStatusMap: { 1: "\u5F00\u542F", 2: "\u5173\u95ED" },
      actions: (record) => [
        /* @__PURE__ */ React.createElement(
          UpdateModal,
          {
            key: "edit",
            type: "edit",
            record,
            reload: tableRef?.current?.reload
          }
        ),
        /* @__PURE__ */ React.createElement(
          MerchantConfiguration,
          {
            key: "merchant-configuration",
            record,
            request: services.finance.rechargeInfoManage.updateMerchant,
            reload: tableRef?.current?.reload
          }
        ),
        /* @__PURE__ */ React.createElement(
          CurrencyConfiguration,
          {
            key: "currency-configuration",
            record,
            request: services.finance.rechargeInfoManage.updateCurrency,
            reload: tableRef?.current?.reload
          }
        )
      ],
      toolBarActions: (record) => [
        /* @__PURE__ */ React.createElement(
          CurrencyRateConfiguration,
          {
            rateType: 1,
            key: "currency-factor-configuration"
          }
        ),
        /* @__PURE__ */ React.createElement(UpdateModal, { key: "add", type: "add", reload: tableRef?.current?.reload })
      ]
    }
  );
};
