import TablePage from "@/components/TablePage";
import services from "@/services";
import { useState, useRef } from "react";
import common from "@/utils/common";
import { pick } from "lodash";
import RoleUpdateModal from "./modal/roleUpdateModal";
export default () => {
  const tablePageRef = useRef();
  const [roleVisible, setRoleVisible] = useState(false);
  const [current, setCurrent] = useState({});
  const columns = [
    {
      title: "ID",
      dataIndex: "roleId",
      hideInSearch: true,
      hideInForm: true
    },
    {
      title: "\u89D2\u8272\u540D\u79F0",
      dataIndex: "roleName",
      formItemProps: {
        rules: [common.ruleUtils.getRule("required")]
      }
    },
    {
      title: "\u4FEE\u6539\u65F6\u95F4",
      dataIndex: "updateTime",
      hideInSearch: true,
      hideInForm: true
    },
    {
      title: "\u64CD\u4F5C\u4EBA",
      dataIndex: "updateBy",
      hideInSearch: true,
      hideInForm: true
    }
  ];
  const handlePermission = async (record) => {
    setCurrent(record);
    setRoleVisible(true);
  };
  const refresh = () => tablePageRef?.current?.reload();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
    TablePage,
    {
      rowKey: "roleId",
      moduleName: "\u89D2\u8272",
      moduleTitle: "\u89D2\u8272\u7BA1\u7406",
      editNameKey: "roleName",
      columns,
      addRequest: services.system.role.addRole,
      listRequest: services.system.role.getRolelist,
      editRequest: services.system.role.editRole,
      beforeRequestFormat: (arg) => {
        const params = pick(arg, ["roleId", "roleName"]);
        return params;
      },
      authConfig: {
        addAuth: common.permissionUtils.checkPageResource("system-role-add"),
        editAuth: common.permissionUtils.checkPageResource("system-role-edit")
      },
      formWidth: 500,
      tableRef: tablePageRef,
      actions: (record) => common.antdUtils.renderTableAction([
        {
          label: "\u6743\u9650",
          auth: "system-role-auth",
          onClick: () => handlePermission(record)
        }
      ])
    }
  ), /* @__PURE__ */ React.createElement(
    RoleUpdateModal,
    {
      visible: roleVisible,
      setVisible: setRoleVisible,
      current,
      refresh
    }
  ));
};
