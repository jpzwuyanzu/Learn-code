import TablePage from "@/components/TablePage";
import services from "@/services";
import { LogOperatorTypeOptions } from "@/constants";
import { useState } from "react";
import common from "@/utils/common";
export default () => {
  const [listDate] = useState(
    common.dateUtils.getDateRange(7)
  );
  const columns = [
    {
      title: "ID",
      dataIndex: "operId",
      hideInSearch: true
    },
    {
      title: "\u64CD\u4F5C\u65F6\u95F4",
      dataIndex: "operTime",
      valueType: "dateTimeRange",
      fieldProps: {
        presets: common.dateUtils.rangePresets,
        showTime: {
          defaultValue: common.dateUtils.rangeDefaultTime()
        }
      },
      initialValue: listDate,
      colSize: 2,
      hideInTable: true
    },
    {
      title: "\u64CD\u4F5C\u8005",
      dataIndex: "operName"
    },
    {
      title: "\u64CD\u4F5C\u7C7B\u578B",
      dataIndex: "businessType",
      valueType: "select",
      request: () => Promise.resolve(LogOperatorTypeOptions),
      hideInSearch: true
    },
    {
      title: "\u64CD\u4F5C\u7C7B\u578B",
      dataIndex: "businessType",
      valueType: "select",
      fieldProps: {
        allowClear: false
      },
      initialValue: "",
      request: () => Promise.resolve(LogOperatorTypeOptions),
      hideInTable: true
    },
    {
      title: "\u64CD\u4F5C\u65F6\u95F4",
      dataIndex: "operTime",
      hideInSearch: true
    },
    {
      title: "IP",
      dataIndex: "operIp"
    },
    {
      title: "\u64CD\u4F5C\u5185\u5BB9",
      dataIndex: "title",
      hideInSearch: true
    },
    {
      title: "\u8BE6\u60C5",
      dataIndex: "operParam",
      hideInSearch: true,
      width: 300,
      render: (text, record) => common.antdUtils.renderTips(text, record.operUrl)
    }
  ];
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
    TablePage,
    {
      moduleTitle: "\u64CD\u4F5C\u65E5\u5FD7",
      columns,
      scroll: { x: 1e3 },
      listRequest: async (values) => {
        const { operTime } = values;
        if (operTime && Array.isArray(operTime)) {
          const [beginTime, endTime] = common.dateUtils.toFormatDateParams(
            operTime,
            { formatTime: true }
          );
          values.beginTime = beginTime;
          values.endTime = endTime;
          delete values.operTime;
        }
        return services.system.operateLog.list(values);
      }
    }
  ));
};
