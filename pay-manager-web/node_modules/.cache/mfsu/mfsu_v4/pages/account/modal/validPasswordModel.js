import { ProForm, ProFormText } from "@ant-design/pro-components";
import { Modal } from "antd";
import { useEffect, useRef, useState } from "react";
import services from "@/services";
import common from "@/utils/common";
import { useModel } from "umi";
export default (props) => {
  const { visible, setVisible } = props;
  const [confirmLoading, setConfirmLoading] = useState(false);
  const [password, setPassword] = useState("");
  const formRef = useRef();
  const { setIsFirstPayPassword, merchantInfo } = useModel("merchant");
  useEffect(() => {
    formRef?.current?.resetFields();
  }, [visible]);
  const validPassword = async () => {
    try {
      setConfirmLoading(true);
      await services.accountInfo.validPayPassword({
        merchantId: merchantInfo?.merchantId,
        password
      });
      setIsFirstPayPassword(true);
      setVisible(false);
      props.callback();
    } finally {
      setConfirmLoading(false);
    }
  };
  return /* @__PURE__ */ React.createElement(
    Modal,
    {
      title: "\u9A8C\u8BC1\u652F\u4ED8\u5BC6\u7801",
      open: visible,
      width: 500,
      onCancel: () => setVisible(false),
      confirmLoading,
      onOk: async () => {
        await formRef?.current?.validateFields();
        return validPassword();
      }
    },
    /* @__PURE__ */ React.createElement(ProForm, { submitter: false, formRef, autoFocusFirstInput: true }, /* @__PURE__ */ React.createElement(
      ProFormText.Password,
      {
        name: "password",
        placeholder: "\u8BF7\u8F93\u5165\u5546\u6237\u652F\u4ED8\u5BC6\u7801\uFF0C\u8FDB\u884C\u9A8C\u8BC1\u64CD\u4F5C",
        fieldProps: {
          maxLength: 20,
          onChange: (e) => {
            setPassword(e.target.value);
          },
          autoFocus: true
        },
        rules: [common.ruleUtils.getRule("required", "\u8BF7\u8F93\u5165\u5546\u6237\u652F\u4ED8\u5BC6\u7801")]
      }
    ))
  );
};
