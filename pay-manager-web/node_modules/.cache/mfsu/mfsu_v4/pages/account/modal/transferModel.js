import services from "@/services";
import { Button, InputNumber, message, Modal, Spin, Tabs } from "antd";
import { useModel } from "@@/exports";
import { useState } from "react";
import { useAsyncEffect } from "ahooks";
import "../styles.less";
var Type = /* @__PURE__ */ ((Type2) => {
  Type2["collection"] = "1";
  Type2["pay"] = "2";
  return Type2;
})(Type || {});
export default (props) => {
  const { merchantInfo } = useModel("merchant");
  const { visible, setVisible, currencyItems, currencyMap } = props;
  const [currency, setCurrency] = useState(props.currency);
  const [loading, setLoading] = useState(false);
  const [type, setType] = useState("2" /* pay */);
  const [amount, setAmount] = useState(0);
  useAsyncEffect(async () => {
    if (visible) {
      setCurrency(currencyItems[0].key);
    }
  }, [visible]);
  const submit = async () => {
    try {
      if (+amount <= 0) {
        message.error("\u5212\u62E8\u91D1\u989D\u5FC5\u987B\u5927\u4E8E0");
        return;
      }
      setLoading(true);
      const params = {
        merchantId: merchantInfo.merchantId,
        currency,
        type: +type,
        amount
      };
      await services.accountInfo.transferAmount(params);
      message.success("\u5212\u62E8\u6210\u529F");
      setVisible(false);
    } finally {
      setLoading(false);
    }
  };
  return /* @__PURE__ */ React.createElement(
    Modal,
    {
      title: "\u5212\u62E8\u4F59\u989D",
      open: visible,
      width: 800,
      footer: null,
      onCancel: () => {
        setVisible(false);
        setAmount(0);
      }
    },
    /* @__PURE__ */ React.createElement("div", { className: "tabs-wrap" }, /* @__PURE__ */ React.createElement(
      Tabs,
      {
        type: "card",
        defaultActiveKey: type,
        items: [
          {
            label: "\u5212\u62E8\u81F3\u4EE3\u4ED8",
            key: "2" /* pay */
          },
          {
            label: "\u5212\u62E8\u81F3\u53EF\u7528\u4F59\u989D",
            key: "1" /* collection */
          }
        ],
        onChange: (v) => setType(v)
      }
    ), /* @__PURE__ */ React.createElement("div", { className: "tabs-content" }, /* @__PURE__ */ React.createElement(
      Tabs,
      {
        type: "card",
        defaultActiveKey: currency,
        items: currencyItems,
        onChange: setCurrency
      }
    ), /* @__PURE__ */ React.createElement("div", { className: "tabs-content" }, /* @__PURE__ */ React.createElement(Spin, { spinning: loading }, /* @__PURE__ */ React.createElement("div", { className: "balance-modal-form" }, /* @__PURE__ */ React.createElement("div", { className: "title" }, type === "1" /* collection */ ? "\u4EE3\u6536\u4F59\u989D" : "\u4EE3\u4ED8\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "item" }, /* @__PURE__ */ React.createElement("div", { className: "key" }, type === "1" /* collection */ ? "\u53EF\u7528\u4F59\u989D" : "\u4EE3\u4ED8\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "val" }, type === "1" /* collection */ ? currencyMap[currency]?.availableBalance.toFixed(2) : currencyMap[currency]?.payBalance.toFixed(2))), /* @__PURE__ */ React.createElement("div", { className: "title" }, type === "1" /* collection */ ? "\u4EE3\u4ED8\u4F59\u989D" : "\u4EE3\u6536\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "item" }, /* @__PURE__ */ React.createElement("div", { className: "key" }, type === "1" /* collection */ ? "\u4EE3\u4ED8\u4F59\u989D" : "\u53EF\u7528\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "val" }, type === "1" /* collection */ ? currencyMap[currency]?.payBalance.toFixed(2) : currencyMap[currency]?.availableBalance.toFixed(2))), /* @__PURE__ */ React.createElement("div", { className: "title" }, "\u5212\u62E8\u91D1\u989D"), /* @__PURE__ */ React.createElement("div", { className: "transfer-input" }, /* @__PURE__ */ React.createElement(
      InputNumber,
      {
        width: "100%",
        min: 1,
        placeholder: "\u8BF7\u8F93\u5165\u5212\u62E8\u91D1\u989D",
        onChange: (value) => {
          setAmount(value ? Number(value) : 0);
        }
      }
    )), /* @__PURE__ */ React.createElement("div", { className: "tips" }, "* \u4EE3\u6536\u53EF\u7528\u4F59\u989D\u548C\u4EE3\u4ED8\u4F59\u989D\u53EF\u7528\u4E92\u76F8\u5212\u62E8\u3002"), /* @__PURE__ */ React.createElement("div", { className: "tips" }, "* \u6CE8\u610F\u4EE3\u4ED8\u4F59\u989D\u4E0D\u8DB3\u5219\u65E0\u6CD5\u4F7F\u7528\u4EE3\u4ED8\u529F\u80FD\u3002"), /* @__PURE__ */ React.createElement("div", { className: "actions" }, /* @__PURE__ */ React.createElement(Button, null, "\u53D6\u6D88"), /* @__PURE__ */ React.createElement(Button, { type: "primary", loading, onClick: submit }, "\u786E\u5B9A")))))))
  );
};
