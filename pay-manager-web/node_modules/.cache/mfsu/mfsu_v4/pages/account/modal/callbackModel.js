import {
  ModalForm,
  ProFormText
} from "@ant-design/pro-components";
import { useRef, useState } from "react";
import services from "@/services";
import { message } from "antd";
import { useModel } from "@@/exports";
import { useAsyncEffect } from "ahooks";
export default (props) => {
  const { visible, setVisible, current } = props;
  const { getMerchantInfo, merchantInfo } = useModel("merchant");
  const [merchantApiData, setMerchantApiData] = useState({
    rechargeNotifyUrl: "",
    exchangeNotifyUrl: ""
  });
  const formRef = useRef();
  useAsyncEffect(async () => {
    if (visible) {
      const { merchantApiInfoVO } = await services.accountInfo.getPayApiInfo({
        merchantId: merchantInfo.merchantId
      });
      setMerchantApiData({
        ...merchantApiInfoVO
      });
      formRef?.current?.setFieldsValue({
        oldRechargeNotifyUrl: merchantApiInfoVO?.rechargeNotifyUrl,
        oldExchangeNotifyUrl: merchantApiInfoVO?.exchangeNotifyUrl
      });
    }
  }, [visible]);
  return /* @__PURE__ */ React.createElement(
    ModalForm,
    {
      className: "callback-modal-form",
      title: "\u4FEE\u6539\u56DE\u8C03\u5730\u5740",
      formRef,
      open: visible,
      autoFocusFirstInput: true,
      layout: "horizontal",
      grid: true,
      modalProps: {
        onCancel: () => setVisible(false)
      },
      colProps: { span: 24 },
      width: 800,
      onFinish: async (values) => {
        await services.accountInfo.updateCallbackUrl({
          merchantId: merchantInfo?.merchantId,
          ...values
        });
        message.success("\u4FEE\u6539\u6210\u529F");
        setVisible(false);
        return true;
      }
    },
    /* @__PURE__ */ React.createElement("div", { className: "box" }, /* @__PURE__ */ React.createElement("div", { className: "title" }, "\u4EE3\u6536\u56DE\u8C03"), /* @__PURE__ */ React.createElement(
      ProFormText,
      {
        name: "oldRechargeNotifyUrl",
        label: "\u5F53\u524D\u4EE3\u6536\u56DE\u8C03\u5730\u5740",
        readonly: true
      }
    ), /* @__PURE__ */ React.createElement(
      ProFormText,
      {
        name: "rechargeNotifyUrl",
        label: "\u65B0\u4EE3\u6536\u56DE\u8C03\u5730\u5740",
        placeholder: "\u8F93\u5165\u56DE\u8C03\u5730\u5740"
      }
    )),
    /* @__PURE__ */ React.createElement("div", { className: "box" }, /* @__PURE__ */ React.createElement("div", { className: "title" }, "\u4EE3\u4ED8\u56DE\u8C03"), /* @__PURE__ */ React.createElement(
      ProFormText,
      {
        name: "oldExchangeNotifyUrl",
        label: "\u5F53\u524D\u4EE3\u4ED8\u56DE\u8C03\u5730\u5740",
        readonly: true
      }
    ), /* @__PURE__ */ React.createElement(
      ProFormText,
      {
        name: "exchangeNotifyUrl",
        label: "\u65B0\u4EE3\u4ED8\u56DE\u8C03\u5730\u5740",
        placeholder: "\u8F93\u5165\u56DE\u8C03\u5730\u5740"
      }
    ))
  );
};
