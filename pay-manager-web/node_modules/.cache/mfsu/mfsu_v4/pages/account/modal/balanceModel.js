import services from "@/services";
import { Button, Modal, Spin, Tabs } from "antd";
import { useModel } from "@@/exports";
import { useState } from "react";
import { useAsyncEffect } from "ahooks";
import "../styles.less";
import _ from "lodash";
import ManualRecharge from "@/pages/finance/usdt-recharge/manual-recharge";
import ManualWithdraw from "@/pages/finance/withdraw-approval/manual-withdraw";
import TransferModel from "@/pages/account/modal/transferModel";
export default (props) => {
  const { merchantInfo } = useModel("merchant");
  const { getCurrencyOptionItems } = useModel("global");
  const { visible, setVisible } = props;
  const [tabItems, setTabItems] = useState([]);
  const [currency, setCurrency] = useState([]);
  const [loading, setLoading] = useState(false);
  const [currencyMap, setCurrencyMap] = useState({});
  const [transferVisible, setTransferVisible] = useState(false);
  const getData = async () => {
    try {
      setLoading(true);
      const items = await services.accountInfo.getMerchantInfo({
        id: merchantInfo.merchantId
      });
      const currencyItems = await getCurrencyOptionItems(null);
      console.log(currencyItems);
      const currency2 = _.get(currencyItems, "[0].currency", "");
      setCurrency(currency2);
      const tabItems2 = currencyItems.map((item) => {
        return {
          label: item.currency,
          key: item.currency
        };
      });
      setTabItems(tabItems2);
      const currencyMap2 = {};
      currencyItems.forEach((currencyItem) => {
        currencyMap2[currencyItem.currency] = items.find(
          (item) => item.currency === currencyItem.currency
        );
      });
      console.log(currencyMap2);
      setCurrencyMap(currencyMap2);
    } finally {
      setLoading(false);
    }
  };
  useAsyncEffect(async () => {
    if (visible) {
      await getData();
    }
  }, [visible]);
  return /* @__PURE__ */ React.createElement(
    Modal,
    {
      title: "\u4F59\u989D\u4FE1\u606F",
      open: visible,
      width: 800,
      footer: null,
      onCancel: () => {
        setVisible(false);
      }
    },
    /* @__PURE__ */ React.createElement("div", { className: "tabs-wrap" }, /* @__PURE__ */ React.createElement(
      Tabs,
      {
        type: "card",
        defaultActiveKey: currency,
        items: tabItems,
        onChange: setCurrency
      }
    ), /* @__PURE__ */ React.createElement("div", { className: "tabs-content" }, /* @__PURE__ */ React.createElement(Spin, { spinning: loading }, /* @__PURE__ */ React.createElement("div", { className: "balance-modal-form" }, /* @__PURE__ */ React.createElement("div", { className: "title" }, "\u4EE3\u6536\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "item" }, /* @__PURE__ */ React.createElement("div", { className: "key" }, "\u53EF\u7528\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "val" }, (currencyMap[currency]?.availableBalance || 0).toFixed(2))), /* @__PURE__ */ React.createElement("div", { className: "item" }, /* @__PURE__ */ React.createElement("div", { className: "key" }, "\u672A\u7ED3\u7B97\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "val" }, (currencyMap[currency]?.unsettledBalance || 0).toFixed(2))), /* @__PURE__ */ React.createElement("div", { className: "item" }, /* @__PURE__ */ React.createElement("div", { className: "key" }, "\u51BB\u7ED3\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "val red" }, (currencyMap[currency]?.freezeBalance || 0).toFixed(2))), /* @__PURE__ */ React.createElement("div", { className: "tips" }, "* \u4EE3\u6536\u7ED3\u7B97\u5468\u671F\uFF1AT+", currencyMap[currency]?.billingCycle || "0"), /* @__PURE__ */ React.createElement("div", { className: "title" }, "\u4EE3\u4ED8\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "item" }, /* @__PURE__ */ React.createElement("div", { className: "key" }, "\u4EE3\u4ED8\u4F59\u989D"), /* @__PURE__ */ React.createElement("div", { className: "val" }, currencyMap[currency]?.payBalance.toFixed(2))), /* @__PURE__ */ React.createElement("div", { className: "tips" }, "* \u4EE3\u6536\u53EF\u7528\u4F59\u989D\u548C\u4EE3\u4ED8\u4F59\u989D\u53EF\u7528\u4E92\u76F8\u5212\u62E8\u3002"), /* @__PURE__ */ React.createElement("div", { className: "tips" }, "* \u6CE8\u610F\u4EE3\u4ED8\u4F59\u989D\u4E0D\u8DB3\u5219\u65E0\u6CD5\u4F7F\u7528\u4EE3\u4ED8\u529F\u80FD\u3002"), /* @__PURE__ */ React.createElement("div", { className: "actions" }, /* @__PURE__ */ React.createElement(Button, { type: "primary", onClick: () => setTransferVisible(true) }, "\u5212\u62E8"), /* @__PURE__ */ React.createElement(ManualRecharge, { reload: getData }, /* @__PURE__ */ React.createElement(Button, { className: "btn-green" }, "\u5145\u503C")), /* @__PURE__ */ React.createElement(ManualWithdraw, { reload: getData }, /* @__PURE__ */ React.createElement(Button, { className: "btn-green" }, "\u63D0\u73B0")))))), /* @__PURE__ */ React.createElement(
      TransferModel,
      {
        visible: transferVisible,
        setVisible: setTransferVisible,
        currencyItems: tabItems,
        currencyMap,
        currency
      }
    ))
  );
};
