import services from "@/services";
import { Modal, Tabs } from "antd";
import { ProTable } from "@ant-design/pro-components";
import { useModel } from "umi";
import { useRef, useState } from "react";
import { useAsyncEffect } from "ahooks";
export default (props) => {
  const { merchantInfo } = useModel("merchant");
  const { getCurrencyOptionItems, getFirstCurrencyOption } = useModel("global");
  const { visible, setVisible } = props;
  const [tab, setTab] = useState("collect");
  const [dataSource, setDataSource] = useState([]);
  const collectTableRef = useRef();
  const payTableRef = useRef();
  useAsyncEffect(async () => {
    if (visible) {
      await getChannelList();
    }
  }, [visible]);
  const getChannelList = async () => {
    const data = await services.accountInfo.getChannelList({ merchantId: merchantInfo.merchantId });
    setDataSource(data || []);
  };
  const collectColumns = [
    {
      title: "\u901A\u9053\u5E01\u79CD",
      dataIndex: "currency",
      valueType: "select",
      hideInSearch: true,
      initialValue: getFirstCurrencyOption(),
      request: () => getCurrencyOptionItems(null),
      fieldProps: {
        allowClear: false
      },
      align: "center",
      width: 300
    },
    {
      title: "\u8D39\u7387",
      dataIndex: "exchangeFeeRate",
      hideInSearch: true,
      render: (text) => `${text}%`,
      align: "center"
    }
  ];
  const payColumns = [
    {
      title: "\u901A\u9053\u5E01\u79CD",
      dataIndex: "currency",
      valueType: "select",
      hideInSearch: true,
      initialValue: getFirstCurrencyOption(),
      request: () => getCurrencyOptionItems(null),
      fieldProps: {
        allowClear: false
      },
      align: "center",
      width: 300
    },
    {
      title: "\u8D39\u7387",
      dataIndex: "exchangeFeeRate",
      hideInSearch: true,
      render: (text) => `${text}%`,
      align: "center"
    },
    {
      title: "\u5355\u7B14\u624B\u7EED\u8D39",
      dataIndex: "exchangeSingleFee",
      hideInSearch: true,
      align: "center"
    }
  ];
  const collectTable = /* @__PURE__ */ React.createElement("div", { className: "modal-table" }, /* @__PURE__ */ React.createElement(
    ProTable,
    {
      rowKey: "currency",
      columns: collectColumns,
      dataSource,
      pagination: false,
      search: false,
      options: false
    }
  ));
  const payTable = /* @__PURE__ */ React.createElement("div", { className: "modal-table" }, /* @__PURE__ */ React.createElement(
    ProTable,
    {
      rowKey: "currency",
      columns: payColumns,
      dataSource,
      pagination: false,
      search: false,
      options: false
    }
  ));
  const items = [
    {
      label: "\u4EE3\u6536\u901A\u9053",
      key: "collect"
    },
    {
      label: "\u4EE3\u4ED8\u901A\u9053",
      key: "pay"
    }
  ];
  return /* @__PURE__ */ React.createElement(
    Modal,
    {
      className: "channel-fee-modal",
      title: "\u6211\u7684\u4FE1\u606F",
      open: visible,
      width: 700,
      footer: null,
      onCancel: () => {
        setVisible(false);
      }
    },
    /* @__PURE__ */ React.createElement("div", { className: "tabs-wrap" }, /* @__PURE__ */ React.createElement(
      Tabs,
      {
        type: "card",
        defaultActiveKey: "collect",
        items,
        onChange: setTab
      }
    ), /* @__PURE__ */ React.createElement("div", { className: "tabs-content" }, tab === "collect" ? collectTable : payTable))
  );
};
