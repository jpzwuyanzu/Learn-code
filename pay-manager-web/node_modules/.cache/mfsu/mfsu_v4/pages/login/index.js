import "./index.less";
import { LoginForm, ProFormText } from "@ant-design/pro-components";
import services from "@/services";
import utils from "@/utils";
import { APP_USER_INFO } from "@/constants/storage";
import { useModel } from "umi";
import common from "@/utils/common";
import { EnterModeEnum } from "@/enums";
import { UserOutlined, LockOutlined } from "@ant-design/icons";
import { APP_NAME } from "@/constants";
import logo from "@/assets/logo.png";
import _ from "lodash";
export default () => {
  const { updateUserInfo, setIsLogin, setEnterMode } = useModel("user");
  return /* @__PURE__ */ React.createElement("div", { className: "login-form-page" }, /* @__PURE__ */ React.createElement(
    LoginForm,
    {
      logo,
      title: APP_NAME,
      onFinish: async (values) => {
        const { token } = await services.user.login(values);
        if (!!token) {
          const { username } = values;
          const userData = {
            userName: username,
            token
          };
          updateUserInfo(userData);
          utils.localStorage.set(APP_USER_INFO, userData);
          const routers = await services.user.getUserRouter();
          const firstRoute = _.first(routers);
          let jumpPath = _.get(
            firstRoute,
            "children[0].path",
            firstRoute?.path || "/"
          );
          if (jumpPath.indexOf("/") !== 0) {
            jumpPath = "/" + jumpPath;
          }
          console.log(`jumpPath`, jumpPath);
          setEnterMode(EnterModeEnum.Login);
          setIsLogin(true);
          location.href = jumpPath;
        }
        return !!token;
      }
    },
    /* @__PURE__ */ React.createElement(
      ProFormText,
      {
        name: "username",
        fieldProps: {
          maxLength: 20,
          size: "large",
          prefix: /* @__PURE__ */ React.createElement(UserOutlined, { className: "prefixIcon" })
        },
        placeholder: "\u7528\u6237\u540D",
        rules: [
          common.ruleUtils.getRule("required", "\u8BF7\u8F93\u5165\u7528\u6237\u540D!"),
          common.ruleUtils.getRule("username")
        ]
      }
    ),
    /* @__PURE__ */ React.createElement(
      ProFormText.Password,
      {
        name: "password",
        fieldProps: {
          maxLength: 20,
          size: "large",
          prefix: /* @__PURE__ */ React.createElement(LockOutlined, { className: "prefixIcon" })
        },
        placeholder: "\u5BC6\u7801",
        rules: [
          common.ruleUtils.getRule("required", "\u8BF7\u8F93\u5165\u5BC6\u7801\uFF01"),
          common.ruleUtils.getRule("password")
        ]
      }
    ),
    /* @__PURE__ */ React.createElement(
      ProFormText,
      {
        name: "googleCode",
        fieldProps: {
          maxLength: 6,
          size: "large",
          prefix: /* @__PURE__ */ React.createElement(LockOutlined, { className: "prefixIcon" })
        },
        placeholder: "\u8C37\u6B4C\u9A8C\u8BC1\u7801",
        rules: [common.ruleUtils.getRule("googleCode")]
      }
    )
  ));
};
