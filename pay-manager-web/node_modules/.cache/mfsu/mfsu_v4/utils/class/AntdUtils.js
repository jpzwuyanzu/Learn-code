import { Tooltip, Tag } from "antd";
import { find } from "lodash";
import { WithLink, WithButton } from "@/components";
import PermissionUtils from "./PermissionUtils";
import React from "react";
class AntdUtils {
  /**
   * 文字超长的详情提示
   * @param content
   * @param addOnBefore
   * @returns
   */
  static renderTips(content, addOnBefore) {
    const isMaxThanLimit = content.length > this.limitTooltipsLen;
    const subText = isMaxThanLimit ? content.substring(0, this.limitTooltipsLen) + "..." : content;
    const baseContent = /* @__PURE__ */ React.createElement(React.Fragment, null, addOnBefore && /* @__PURE__ */ React.createElement("div", null, addOnBefore), /* @__PURE__ */ React.createElement("div", null, content));
    if (isMaxThanLimit) {
      return /* @__PURE__ */ React.createElement(Tooltip, { title: baseContent }, /* @__PURE__ */ React.createElement(React.Fragment, null, addOnBefore && /* @__PURE__ */ React.createElement("div", null, addOnBefore), /* @__PURE__ */ React.createElement("div", null, subText)));
    }
    return baseContent;
  }
  /**
   * 渲染tag 或者 带颜色的文字
   * @param list
   * @param value
   * @param isTag
   */
  static renderTag(list, value, isTag = true) {
    const current = find(list, { value });
    if (!current) {
      return null;
    }
    if (isTag) {
      return /* @__PURE__ */ React.createElement(Tag, { color: current.color ?? "default" }, current.label ?? "-");
    }
    return /* @__PURE__ */ React.createElement("span", { style: { color: current.color ?? "#333", fontWeight: "bold" } }, current.label ?? "-");
  }
  /**
   * table组件操作按钮
   * @param actions 操作按钮
   * @param isButton 是否是按钮
   * @returns
   */
  static renderTableAction(actions, isButton = false) {
    const checkPerm = (auth) => {
      if (auth === "true") {
        return true;
      }
      return PermissionUtils.checkPageResource(auth);
    };
    let result = [];
    if (Array.isArray(actions)) {
      const NodeName = isButton ? WithButton : WithLink;
      result = actions.filter((i) => !i.hide).map((action, idx) => {
        if (action.render) {
          return checkPerm(action.auth ?? "true") ? action.render() : null;
        }
        return /* @__PURE__ */ React.createElement(
          NodeName,
          {
            ...action,
            key: action.key ?? idx,
            className: action.className ?? "",
            auth: action.auth
          },
          action.label
        );
      });
    }
    return result;
  }
}
AntdUtils.limitTooltipsLen = 60;
export default AntdUtils;
