class PermissionUtils {
  constructor() {
    this.pagePermission = [];
    this.pageResource = {};
    /**
     * 获取页面权限
     * @param permission
     * @param pagePermission
     * @param pageResource
     */
    this.getPagePermission = (permission, pagePermission, pageResource) => {
      const getPageResourceList = (children, dataList) => {
        children.forEach((item) => {
          if (item.id && item.id.toString().length >= 6) {
            dataList.push(item.path);
            if (item.children && item.children.length) {
              getPageResourceList(item.children, dataList);
            }
          }
        });
      };
      permission.forEach((pageItem) => {
        if (pageItem.id && pageItem.path) {
          if ([2, 4].includes(String(pageItem.id).length)) {
            pagePermission.push({
              name: pageItem.label,
              path: pageItem.path
            });
            if (pageItem.children && pageItem.children.length) {
              const resourceList = [];
              getPageResourceList(pageItem.children, resourceList);
              this.getPagePermission(
                pageItem.children,
                pagePermission,
                pageResource
              );
              pageResource[pageItem.path] = resourceList;
            }
          } else if (pageItem.children && pageItem.children.length) {
            this.getPagePermission(
              pageItem.children,
              pagePermission,
              pageResource
            );
          }
        }
      });
    };
    /**
     * 检测页面权限
     * @param pathname
     */
    this.checkPageAccess = (pathname) => {
      if (pathname === "/" || pathname === "")
        return true;
      return this.pagePermission.some(
        (item) => item.path === pathname
      );
    };
    /**
     * 检测页面-按钮权限
     * @param key
     * @param pathname
     */
    this.checkPageResource = (key, pathname = window.location.pathname) => {
      const pathList = this.pageResource[pathname] || [];
      const result = pathList.some((item) => item === key);
      return result;
    };
  }
  /**
   * 初始化权限
   * @param permission
   */
  initPermission(permission) {
    if (Array.isArray(permission)) {
      const pagePermission = [
        {
          name: "\u9996\u9875",
          path: ""
        }
      ];
      const pageResource = {};
      this.getPagePermission(permission, pagePermission, pageResource);
      this.pagePermission = pagePermission;
      this.pageResource = pageResource;
      console.log("initPermission pagePermission", pagePermission);
      console.log("initPermission pageResource", pageResource);
    }
  }
  /**
   * 是否有异步数据路由
   */
  hasAsyncRouter() {
    return !!this.pagePermission.length;
  }
  static getInstance() {
    if (!this.instance) {
      this.instance = new PermissionUtils();
    }
    return this.instance;
  }
}
export default PermissionUtils.getInstance();
