import dayjs from "dayjs";
import weekday from "dayjs/plugin/weekday";
import localeData from "dayjs/plugin/localeData";
dayjs.extend(weekday);
dayjs.extend(localeData);
const _DateUtil = class {
  // 格式成string
  static formatDateString(date, bool = true) {
    const formatStr = bool ? this.formatTime : this.formatDate;
    return dayjs(date).format(formatStr);
  }
  /**
   * 将返回的字符串转为dayjs格式，不需要做时区处理
   */
  static toDayjsDate(dateStr = "", format = "") {
    if (!!format) {
      return dayjs(dateStr, format);
    }
    return dayjs(dateStr);
  }
  /**
   * 获取时间戳
   */
  static getTimeStamsp(date) {
    return dayjs(date).utcOffset().valueOf();
  }
  /**
   * 通过配置获取日期格式
   * @param prev
   * @param next
   * @param config
   */
  static getFormatByConfig(prev, next, config) {
    const {
      formatDate = false,
      formatTime = false,
      formatTimeStamp = false
    } = config;
    if (formatDate) {
      return [prev.format(this.formatDate), next.format(this.formatDate)];
    }
    if (formatTime) {
      return [prev.format(this.formatTime), next.format(this.formatTime)];
    }
    if (formatTimeStamp) {
      return [prev.valueOf(), next.valueOf()];
    }
    return [prev, next];
  }
  /**
   * 获取默认的日期
   */
  static getInitDate(index = 0) {
    return [
      dayjs().subtract(index - 1, "days").startOf("day"),
      dayjs().endOf("day")
    ];
  }
  /**
   * 获取日期范围 从当前时间往上计算
   * @param index
   * @param config
   */
  static getDateRange(index = 0, config) {
    const [startDate, endDate] = this.getInitDate(index);
    return this.getFormatByConfig(startDate, endDate, config || {});
  }
  /**
   * 将日期的string数据转换为对应的格式
   */
  static toFormatDateParams(date, config = { formatTimeStamp: true }) {
    if (date && Array.isArray(date)) {
      const [start, end] = date;
      return this.getFormatByConfig(
        this.toDayjsDate(start),
        this.toDayjsDate(end),
        config
      );
    }
    return [];
  }
};
let DateUtil = _DateUtil;
// 格式化到天
DateUtil.formatDate = "YYYY-MM-DD";
// 格式化到秒
DateUtil.formatTime = "YYYY-MM-DD HH:mm:ss";
/**
 * 预设时间范围
 */
DateUtil.rangePresets = [
  { label: "\u4ECA\u5929", value: _DateUtil.getDateRange(1) },
  { label: "\u6700\u8FD13\u5929", value: _DateUtil.getDateRange(3) },
  { label: "\u6700\u8FD17\u5929", value: _DateUtil.getDateRange(7) },
  { label: "\u6700\u8FD130\u5929", value: _DateUtil.getDateRange(30) }
];
/**
 * 预设开始结束时间
 */
DateUtil.rangeDefaultTime = () => {
  return [dayjs("00:00:00", "HH:mm:ss"), dayjs("23:59:59", "HH:mm:ss")];
};
export default DateUtil;
