{"version":3,"file":"static/js/147.77c1c710.chunk.js","mappings":"uSAOMA,EAAUC,EAAAA,EAAAA,OAAa,CAEzBC,QAAuFC,4BACvFC,QAAS,MAIbJ,EAAQK,aAAaC,QAAQC,KACzB,SAACC,GAIG,OAFAA,EAAOC,QAAQ,WAAa,aAC5BC,IAAAA,QACOF,CACX,IACA,SAACG,GAGG,OADAC,QAAQC,IAAIF,GACLG,QAAQC,OAAOJ,EAC1B,IAGJX,EAAQK,aAAaW,SAAST,KAEzB,SAACS,GACE,IAAMC,EAAMD,EAASE,KACrB,GAAgB,MAAbD,EAAIE,MAA6B,QAAbF,EAAIE,KAWvB,OADAT,IAAAA,OACOO,EAHPG,EAAAA,GAAAA,KAAWH,EAAII,IAKvB,IACA,SAACV,GAEG,OADAC,QAAQC,IAAI,SAAWF,GAChBG,QAAQC,OAAOJ,EAC1B,IAGJ,QC1CO,SAASW,EAAeC,GAC3B,OAAOjB,EAAAA,KAAa,6BAA8BiB,EACtD,CAEO,SAASC,EAAgBD,GAC5B,OAAOjB,EAAAA,KAAa,0BAA2BiB,EACnD,CAEO,SAASE,EAAgBF,GAC5B,OAAOjB,EAAAA,KAAa,gCAAiCiB,EACzD,CAEO,SAASG,EAAWH,GACvB,OAAOjB,EAAAA,KAAa,wBAAyBiB,EACjD,CAEO,SAASI,EAAoBJ,GAChC,OAAOjB,EAAAA,KAAa,6BAA8BiB,EACtD,CAEO,SAASK,EAAmBL,GAC/B,OAAOjB,EAAAA,KAAa,kCAAmCiB,EAC3D,C,4FC5BaM,EAAoCC,EAAAA,GACpCC,EAAkDC,EAAAA,E,6ICGzDC,EAAiB,CACrBC,MAAO,iLACPC,QAAS,qKACTC,QAAS,+FAsSX,UAnSmB,WACjB,OAA8BC,EAAAA,EAAAA,WAAkB,GAAM,eAA/CC,EAAO,KAAEC,EAAU,KAC1B,GAA8CF,EAAAA,EAAAA,WAAkB,GAAM,eAA/DG,EAAe,KAAEC,EAAkB,KAC1C,GAA8CJ,EAAAA,EAAAA,WAAkB,GAAM,eAA/DK,EAAe,KAAEC,EAAkB,KAC1C,GAA0CN,EAAAA,EAAAA,UAAS,IAAG,eAA/CO,EAAa,KAAEC,EAAgB,KACtC,GAAuCR,EAAAA,EAAAA,UAAS,IAAG,eAA5CS,EAAY,KAAEC,EAAc,KACnC,GAAqCV,EAAAA,EAAAA,UAAS,IAAG,eAA1CW,EAAW,KAACC,EAAc,KACjC,GAAwCZ,EAAAA,EAAAA,UAAc,GAAE,eAAjDa,EAAY,KAAEC,EAAe,KACpC,GAA6BC,EAAAA,EAAAA,MAAXC,GAAF,EAARC,SAAgB,EAAND,QACZE,EAAe,IAAIC,gBAAgBH,GACnCI,GAAWC,EAAAA,EAAAA,MACXC,GAAW9B,EAAAA,EAAAA,KAEX+B,GAAWC,EAAAA,EAAAA,UAAQ,WACvB,IAAIC,EAAY,GA4BhB,OA3BAhB,EAAaiB,SAAQ,SAACC,EAAUC,GAC9BH,EAAKI,KAAK,CACRC,GAAIH,EAAIG,GACRC,OAAQpB,EAAcgB,EAAIK,UAC1BC,MACE,iCACE,iBAAMC,UAAWC,EAAAA,QAAAA,WAAkB,SAAER,EAAIM,QACzC,iBAAMC,UAAWC,EAAAA,QAAAA,aAAoB,UACnC,kBAAMD,UAAWC,EAAAA,QAAAA,WAAkB,WACjC,iBAAMD,UAAqC,IAAzBE,OAAOvB,GAAuBsB,EAAAA,QAAAA,aAAsBA,EAAAA,QAAAA,iBACtE,iBAAMD,UAAWC,EAAAA,QAAAA,aAAoB,SAA2B,IAAzBC,OAAOvB,GAAsB,eAAO,yBAKnFwB,aACE,+BACE,kBAAMH,UAAWC,EAAAA,QAAAA,mBAA0B,WACzC,iBAAMD,UAAWC,EAAAA,QAAAA,YAAmB,2BACpC,kBAAMD,UAAWC,EAAAA,QAAAA,UAAiB,2CAAOC,OAAOT,EAAIW,gBAAkBF,OAAOT,EAAIY,gBAAe,iBAItGC,OAAQ,EACRC,UAAWd,EAAIM,MAEnB,IACOR,CACT,GAAG,CAAChB,IAiBEiC,EAAoB,SAACC,GAVR,IAACC,EAJDC,EAAgBJ,EAe5BE,EAAkB,QAfNE,EAgBHF,EAAc,GAhBKF,EAgBFE,EAAqB,UAfpDvB,EAAS,iCAAD,OAAkCyB,EAAO,uBAAeJ,EAAS,wBAAgBvB,EAAa4B,IAAI,eAAc,wBAAgB5B,EAAa4B,IAAI,eAAc,sBAAc5B,EAAa4B,IAAI,aAAY,uBAAe5B,EAAa4B,IAAI,cAAa,yBAAiB5B,EAAa4B,IAAI,oBAG/QF,EAcH,QAbfG,EAAAA,GAAAA,MAAa,CACXC,YAAa,qBACbC,QAAUrD,EAAuBsD,OAAON,IACxCO,UAAW,WACT5E,QAAQC,IAAI,YACd,IAUJ,EAEI4E,EAAa,yCAAG,0GAGCjE,EAAAA,EAAAA,IAAe,CAAEkE,YAAYnC,EAAa4B,IAAI,eAAgBQ,YAAapC,EAAa4B,IAAI,eAAgBS,UAAWrC,EAAa4B,IAAI,aAAcU,WAAYtC,EAAa4B,IAAI,gBAAe,OACvM,OADZlE,EAAQ,QACLE,OACLwC,GAASmC,EAAAA,EAAAA,IAAY,CAAEjB,QAAQ,KAC/B9B,EAAe9B,EAAIC,KAAOD,EAAIC,KAAK6E,MAAQ,IAC3C9C,EAAehC,EAAIC,KAAOD,EAAIC,KAAK8E,QAAU,IAC7C7C,EAAgBlC,EAAIC,KAAK+E,WAM1B,2CACF,kBAfkB,mCAkBbC,EAAe,yCAAG,0GACDzE,EAAAA,EAAAA,IAAe,CAAC,GAAE,OACvB,OADZR,EAAQ,QACLE,MAAgBF,EAAIC,OACzB2B,EAAiB5B,EAAIC,KAAKiF,OAASlF,EAAIC,KAAKiF,OAAS,IACrDlF,EAAIC,KAAKiF,SAAW3D,GAAmBD,GAAW,IACnD,2CACF,kBANoB,mCAQf6D,EAAa,WAAO,IAAD,EAClBC,OAAeC,eACjBD,OAAeC,eAAeC,eACA,QAA1B,EAAKF,OAAeG,cAAM,OAAtB,EAAwBC,iBAChCJ,OAAeG,OAAOC,gBAAgBC,OAAOC,YAAY,eAE9D,EAGMC,EAAc,yCAAG,8GACEjF,EAAAA,EAAAA,IAAmB,CAAC+D,YAAanC,EAAa4B,IAAI,iBAAgB,OAA3E,OAAR0B,EAAQ,iBACSrF,EAAAA,EAAAA,IAAe,CAAEkE,YAAYnC,EAAa4B,IAAI,eAAgBQ,YAAapC,EAAa4B,IAAI,eAAgBS,UAAWrC,EAAa4B,IAAI,aAAcU,WAAYtC,EAAa4B,IAAI,gBAAe,OAAnNlE,EAAQ,OACV6F,EAAe,GAChBD,GAAsB,MAAdA,EAAK1F,MAAgB0F,EAAK3F,KAAK6F,OAErC9F,GAAoB,MAAbA,EAAIE,MAAgBF,EAAIC,MAAQD,EAAIC,KAAK6E,OAAS9E,EAAIC,KAAK6E,MAAMiB,QACzE/F,EAAIC,KAAK6E,MAAMhC,SAAQ,SAACC,EAAUC,GAChC6C,EAAQ5C,KAAKO,OAAOT,EAAIG,IAC1B,KAE0D,IAAzD2C,EAAQG,QAAQxC,OAAOoC,EAAK3F,KAAK6F,MAAe,UACjDtD,EAAS,iCAAD,OAAkCgB,OAAOoC,EAAK3F,KAAK6F,MAAe,SAAE,uBAAeF,EAAK3F,KAAK6F,MAAiB,UAAC,wBAAgBxD,EAAa4B,IAAI,eAAc,wBAAgB5B,EAAa4B,IAAI,eAAc,sBAAc5B,EAAa4B,IAAI,aAAY,uBAAe5B,EAAa4B,IAAI,cAAa,yBAAiB5B,EAAa4B,IAAI,kBAE/U1C,GAAmB,IAGjBxB,GAAoB,QAAbA,EAAIE,QAAqBF,GAAoB,MAAbA,EAAIE,MAAgBF,EAAIC,MAAQD,EAAIC,KAAK6E,OAAS9E,EAAIC,KAAK6E,MAAMiB,QAG1GrE,GAAmB,IAEnB8C,IACAS,KAEH,2CAEF,kBA3BmB,mCA8BdgB,EAAW,yCAAG,uFACf1E,EAAgB,CAAD,gCACXZ,EAAAA,EAAAA,IAAkB,CAACuF,gBAAiB5D,EAAa4B,IAAI,eAAgBiC,UAAW,IAAG,OAE1FzE,GAAmB,GACnBJ,GAAW,GACXE,GAAmB,GACnB2D,IAAY,2CACb,kBARgB,mCAiBf,OANAiB,EAAAA,EAAAA,YAAU,WACRT,GAEF,GAAG,KAID,iBAAKrC,UAAWC,EAAAA,QAAAA,gBAAuB,WACrC,gBAAKD,UAAWC,EAAAA,QAAAA,YAAmB,UACjC,SAAC,KAAM,CAAC8C,OAAQ,kBAAMlB,GAAY,EAAC,yCAErC,gBAAK7B,UAAWC,EAAAA,QAAAA,eAAsB,UACpC,SAAC,KAAI,UACFZ,EAAS2D,KACR,SAACC,GA2BA,OACC,SAAC,UAAS,CAERC,QACE,SAAC,KAAK,CACJC,IAAKF,EAAKpD,OACVuD,MAAO,CAAEC,aAAc,IACvBC,IAAI,QACJC,MAAO,GACPC,OAAQ,KAGZrD,YAAa8C,EAAK9C,YAClBsD,MAAO,KACPC,QAAS,kBAAMlD,EAAkByC,EAAK,EAAC,SAEtCA,EAAKlD,MAdDkD,EAAKrD,GAeA,SAMpB,SAAC,KAAK,CACJ7B,QAASA,EACTgD,SACE,+BACE,iBAAKf,UAAWC,EAAAA,QAAAA,qBAA4B,WAC1C,gBAAKD,UAAWC,EAAAA,QAAAA,MAAa,uCAC7B,gBAAKD,UAAWC,EAAAA,QAAAA,QAAe,UAC7B,gBACED,UAAWC,EAAAA,QAAAA,eACX0D,wBAAyB,CACvBC,OAAQvF,YAOpBwF,eAAa,EACbC,QAAS,WACP9F,GAAW,EACb,EACA+F,QAAS,CACP,CACEC,IAAK,UACLC,KAAM,gCAMZ,SAAC,KAAK,CACJlG,QAASE,EACT8C,SACE,+BACE,iBAAKf,UAAWC,EAAAA,QAAAA,qBAA4B,WAC1C,gBAAKD,UAAWC,EAAAA,QAAAA,MAAa,2BAC7B,gBAAKD,UAAWC,EAAAA,QAAAA,QAAe,UAC7B,gBAAKD,UAAWC,EAAAA,QAAAA,eAAsB,+JAO9C4D,eAAa,EACbE,QAAS,CACP,CACEC,IAAK,UACLC,KAAM,2BACNP,QAAS,kBAAMf,GAAa,OAMhC,SAAC,KAAK,CACJ5E,QAASI,EACT4C,SACE,+BACE,iBAAKf,UAAWC,EAAAA,QAAAA,qBAA4B,WAC1C,gBAAKD,UAAWC,EAAAA,QAAAA,MAAa,2BAC7B,gBAAKD,UAAWC,EAAAA,QAAAA,QAAe,UAC7B,gBAAKD,UAAWC,EAAAA,QAAAA,eAAsB,8IAO9C4D,eAAa,EACbE,QAAS,CACP,CACEC,IAAK,UACLC,KAAM,eACNP,QAAS,kBAAMf,GAAa,QAO1C,C,8BC9SA,WAAgB,gBAAkB,+BAA+B,YAAc,2BAA2B,eAAiB,8BAA8B,WAAa,0BAA0B,aAAe,4BAA4B,WAAa,0BAA0B,aAAe,4BAA4B,cAAgB,6BAA6B,aAAe,4BAA4B,mBAAqB,kCAAkC,YAAc,2BAA2B,UAAY,yBAAyB,qBAAuB,oCAAoC,MAAQ,qBAAqB,QAAU,uBAAuB,eAAiB,8B","sources":["utils/request.ts","api/index.ts","hooks/redux-hook.ts","views/proxy/index.tsx","webpack://proxy/./src/views/proxy/index.module.scss?826d"],"sourcesContent":["import axios from 'axios'\nimport Nprogress from 'nprogress'\nimport 'nprogress/nprogress'\nimport { Toast } from 'antd-mobile'\n\n\n//创建axios实例\nconst service = axios.create({\n    // baseURL: 'http://172.28.113.248:8067',\n    baseURL: (process.env.NODE_ENV === 'production' ||  process.env.NODE_ENV === 'test') ? process.env.REACT_APP_BASE_URL : '',\n    timeout: 10000\n})\n\n//请求拦截\nservice.interceptors.request.use(\n    (config: any) => {\n        //模拟请求令牌\n        config.headers['X-Token'] = 'test token'\n        Nprogress.start()\n        return config;\n    },\n    (error: any) => {\n        //请求错误统一处理\n        console.log(error)\n        return Promise.reject(error)\n    })\n\n//响应拦截\nservice.interceptors.response.use(\n     // 通过判断状态码统一处理响应， 根据实际情况修改，同时可以根据http状态码判断请求结果\n     (response: any) => {\n        const res = response.data\n        if(res.code !== 200 && res.code !== 10038) {\n            // if(res.code === 1401) {\n            //     sessionStorage.clear()\n            //     removeCookieItem('token')\n            //     removeCookieItem('userInfo')\n            //     location.href=location.origin + \"/#/login\"\n            // }\n            //在这里处理错误\n            Toast.show(res.msg)\n        } else {\n            Nprogress.done()\n            return res\n        }\n    },\n    (error) => {\n        console.log('error:' + error)\n        return Promise.reject(error)\n    }\n)\n\nexport default service","import request from './../utils/request'\n\nexport function getDemo (params: any) {\n    return request.get('/test/load', params)\n}\nexport function postDemo (params: any) {\n    return request.post('/test/post', {params})\n}\n\n// 上传图片到fast接口\nexport function uploadFastImg (params? :any) {\n    return request.post('/api/sys/upload/uploadFile', params)\n}\n//查询在线代理列表\nexport function getOnlineAgent (params? :any) {\n    return request.post('/chat/agent/onlineAgent', params)\n}\n//查询公告信息\nexport function getAgentNotice (params? :any) {\n    return request.post('/api/agent/notice/queryNotice', params)\n}\n//添加举报信息接口\nexport function addReport (params? :any) {\n    return request.post('/api/agent/report/add', params)\n}\n//获取订单详情\nexport function loadCusOrderDetail (params? :any) {\n    return request.post('/api/agent/queryAgentOrder', params)\n}\n//修改订单状态\nexport function changeOrderStatus (params? :any) {\n    return request.post('/api/agent/updateOrderPayStatus', params)\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './../store/index'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","/* eslint-disable */\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate, useLocation,useParams } from \"react-router-dom\";\nimport { NavBar, List, Image, Dialog, Modal, Toast } from \"antd-mobile\";\nimport { useAppDispatch } from './../../hooks/redux-hook'\nimport styles from \"./index.module.scss\";\nimport { getOnlineAgent, getAgentNotice, loadCusOrderDetail, changeOrderStatus } from './../../api/index'\nimport { switchState } from './../../store/order.slice'\nconst proxyStatusMsg = {\n  close: \"该商家代理已停止营业，为了不影响您的充值体验，请换一个店铺\",\n  offLine: \"该商家代理已离线，为了不影响您的充值体验，请换一个店铺\",\n  trading: \"存在正在进行中的订单，请先完成!\",\n};\n\nconst ProxyIndex = () => {\n  const [visible, setVisible] = useState<boolean>(false);\n  const [noAgentVisiable, setNoAgentVisiable] = useState<boolean>(false);\n  const [noOrderAndAgent, setNoOrderAndAgent] = useState<boolean>(false);\n  const [noticeContent, setNoticeContent] = useState('');\n  const [proxUserList, setProUserList] = useState([]);\n  const [headFastUrl,setHeadFastUrl] = useState('');\n  const [onLineStatus, setOnLineStatus] = useState<any>(1);\n  const { pathname, search } = useLocation()\n  const searchParams = new URLSearchParams(search);\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch()\n\n  const factUser = useMemo(() => {\n    let temp: any = [];\n    proxUserList.forEach((itm: any, inx) => {\n      temp.push({\n        id: itm.id,\n        avatar: headFastUrl + itm.headImage,\n        name: (\n          <>\n            <span className={styles.proxy_name}>{itm.name}</span>\n            <span className={styles.socketStatus}>\n              <span className={styles.proxy_flex}>\n                <span className={ Number(onLineStatus) === 1 ?  styles.status_point : styles.statusOffLine}></span>\n                <span className={styles.proxy_status}>{Number(onLineStatus) === 1 ? '在线' : '离线'}</span>\n              </span>\n            </span>\n          </>\n        ),\n        description: (\n          <>\n            <span className={styles.descript_container}>\n              <span className={styles.proxy_store}>店铺</span>\n              <span className={styles.proxy_num}>已累计充值{Number(itm.realOrderCount) + Number(itm.fakeOrderCount)}单</span>\n            </span>\n          </>\n        ),\n        status: 1, //状态为1代表开启\n        proxyName: itm.name\n      });\n    });\n    return temp\n  }, [proxUserList])\n\n  //跳转到代理通道\n  const linkProxy = (proxyId: number,proxyName: string) => {\n    navigate(`/chat/chatroom?toUserId=AGENT_${proxyId}&toUserName=${proxyName}&orderNumber=${searchParams.get('orderNumber')}&orderAmount=${searchParams.get('orderAmount')}&orderType=${searchParams.get('orderType')}&fromUserId=${searchParams.get('fromUserId')}&fromUserName=${searchParams.get('fromUserName')}`);\n  };\n  //打开弹框\n  const openDialog = (type: string) => {\n    Dialog.alert({\n      confirmText: \"知道了\",\n      content: (proxyStatusMsg as any)[String(type)],\n      onConfirm: () => {\n        console.log(\"Confirmed\");\n      },\n    })\n  }\n  //根据代理状态，处理逻辑\n  const handleChooseProxy = (proxyInfo: any) => {\n      if(proxyInfo['status']) {\n        linkProxy(proxyInfo['id'], proxyInfo['proxyName'])\n      } else {\n        openDialog('close')\n      }\n  }\n//加载在线代理列表\nconst loadProxyList = async () => {\n  //[\"userName='%E5%BC%A0%E4%B8%89'\", 'userId=12222222', 'orderNumber=11111111', 'orderAmount=100000', 'orderType=1']\n  //orderType: 1:游戏充值 3:金币充值 2:会员充值\n  let res: any = await getOnlineAgent({ orderNumber:searchParams.get('orderNumber'), orderAmount: searchParams.get('orderAmount'), orderType: searchParams.get('orderType'), fromUserId: searchParams.get('fromUserId')})\n  if(res.code === 200) {\n    dispatch(switchState({ status: true }))\n    setProUserList(res.data ? res.data.agent : [])\n    setHeadFastUrl(res.data ? res.data.fastUrl : '')\n    setOnLineStatus(res.data.isOnline)\n  } else {\n    // Toast.show({\n    //   icon: 'fail',\n    //   content: res.msg\n    // })\n  }\n}\n\n//获取代理公告\nconst loadProxynotice = async () => {\n  let res: any = await getAgentNotice({})\n  if(res.code === 200 && res.data) {\n    setNoticeContent(res.data.notice ? res.data.notice : '')\n    res.data.notice && !noAgentVisiable && setVisible(true)\n  }\n}\n\nconst handleback = () => {\n  if ((window as any).WebLocalBridge) {\n    (window as any).WebLocalBridge.rechargeBack();\n  } else if ((window as any).webkit?.messageHandlers) {\n    (window as any).webkit.messageHandlers.JsToOc.postMessage('rechargeBack');\n  }\n}\n\n//查询当前订单是否匹配过代理\nconst regOrderDetail = async() => {\n  const resp:any = await loadCusOrderDetail({orderNumber: searchParams.get('orderNumber')})\n  const res: any = await getOnlineAgent({ orderNumber:searchParams.get('orderNumber'), orderAmount: searchParams.get('orderAmount'), orderType: searchParams.get('orderType'), fromUserId: searchParams.get('fromUserId')})\n  let tempArr: any = [];\n  if(resp && resp.code === 200 && resp.data.order) {\n    //在这里比对代理列表\n    if(res && res.code === 200 && res.data && res.data.agent && res.data.agent.length) {\n      res.data.agent.forEach((itm: any, inx: any) => {\n        tempArr.push(Number(itm.id))\n      })\n    } \n    if(tempArr.indexOf(Number(resp.data.order['agentId'])) !== -1) {\n      navigate(`/chat/chatroom?toUserId=AGENT_${Number(resp.data.order['agentId'])}&toUserName=${resp.data.order['agentName']}&orderNumber=${searchParams.get('orderNumber')}&orderAmount=${searchParams.get('orderAmount')}&orderType=${searchParams.get('orderType')}&fromUserId=${searchParams.get('fromUserId')}&fromUserName=${searchParams.get('fromUserName')}`);\n    } else {\n      setNoAgentVisiable(true)\n    }\n  } else {\n    if((res && res.code === 10038) || !(res && res.code === 200 && res.data && res.data.agent && res.data.agent.length)) {\n      // setNoAgentVisiable(true)\n      //没有订单，并且没有代理\n      setNoOrderAndAgent(true)\n    } else {\n      loadProxyList()\n      loadProxynotice()\n    }\n  }\n  \n}\n\n//关闭当前待支付订单\nconst cancelOrder = async() => {\n  if(noAgentVisiable) {\n   await changeOrderStatus({merchantOrderId: searchParams.get('orderNumber'), payStatus: 4})\n  }\n  setNoOrderAndAgent(false)\n  setVisible(false)\n  setNoAgentVisiable(false);\n  handleback()\n}\n\n\n  useEffect(() => {\n    regOrderDetail()\n    // loadProxynotice()\n  }, []);\n\n\n  return (\n    <div className={styles.proxy_container}>\n      <div className={styles.top_nav_bar}>\n        <NavBar onBack={() => handleback()}>全部代理</NavBar>\n      </div>\n      <div className={styles.all_proxy_list}>\n        <List>\n          {factUser.map(\n            (user: {\n              id: React.Key | null | undefined;\n              avatar: string | undefined;\n              description:\n                | string\n                | number\n                | boolean\n                | React.ReactElement<\n                    any,\n                    string | React.JSXElementConstructor<any>\n                  >\n                | React.ReactFragment\n                | React.ReactPortal\n                | null\n                | undefined;\n              name:\n                | string\n                | number\n                | boolean\n                | React.ReactElement<\n                    any,\n                    string | React.JSXElementConstructor<any>\n                  >\n                | React.ReactFragment\n                | React.ReactPortal\n                | null\n                | undefined;\n            }) => (\n              <List.Item\n                key={user.id}\n                prefix={\n                  <Image\n                    src={user.avatar}\n                    style={{ borderRadius: 60 }}\n                    fit=\"cover\"\n                    width={60}\n                    height={60}\n                  />\n                }\n                description={user.description}\n                arrow={null}\n                onClick={() => handleChooseProxy(user)}\n              >\n                {user.name}\n              </List.Item>\n            )\n          )}\n        </List>\n      </div>\n      {/* 系统公告 */}\n      <Modal\n        visible={visible}\n        content={\n          <>\n            <div className={styles.annoceMent_container}>\n              <div className={styles.title}>代理公告</div>\n              <div className={styles.content}>\n                <div\n                  className={styles.insert_element}\n                  dangerouslySetInnerHTML={{\n                    __html: noticeContent,\n                  }}\n                ></div>\n              </div>\n            </div>\n          </>\n        }\n        closeOnAction\n        onClose={() => {\n          setVisible(false);\n        }}\n        actions={[\n          {\n            key: \"confirm\",\n            text: \"我知道了\",\n          },\n        ]}\n      />\n      {/* 系统公告 */}\n      {/* 提示进行中订单没有找到代理 */}\n      <Modal\n        visible={noAgentVisiable}\n        content={\n          <>\n            <div className={styles.annoceMent_container}>\n              <div className={styles.title}>提示</div>\n              <div className={styles.content}>\n                <div className={styles.insert_element}>\n                商家代理已暂停营业，将自动关闭订单，请重新下单\n                </div>\n              </div>\n            </div>\n          </>\n        }\n        closeOnAction\n        actions={[\n          {\n            key: \"confirm\",\n            text: \"重新下单\",\n            onClick: () => cancelOrder()\n          },\n        ]}\n      />\n      {/* 提示进行中订单没有找到代理 */}\n      {/* 没有匹配到订单，也没有代理在线，提示用户选择其他支付方式 */}\n        <Modal\n          visible={noOrderAndAgent}\n          content={\n            <>\n              <div className={styles.annoceMent_container}>\n                <div className={styles.title}>提示</div>\n                <div className={styles.content}>\n                  <div className={styles.insert_element}>\n                  当前暂无代理接单，请重新选择其他支付方式!\n                  </div>\n                </div>\n              </div>\n            </>\n          }\n          closeOnAction\n          actions={[\n            {\n              key: \"confirm\",\n              text: \"关闭\",\n              onClick: () => cancelOrder()\n            },\n          ]}\n        />\n      {/* 没有匹配到订单，也没有代理在线，提示用户选择其他支付方式 */}\n    </div>\n  );\n};\n\nexport default ProxyIndex;\n","// extracted by mini-css-extract-plugin\nexport default {\"proxy_container\":\"proxy_proxy_container__rJXJC\",\"top_nav_bar\":\"proxy_top_nav_bar__joJmV\",\"all_proxy_list\":\"proxy_all_proxy_list__H55Dk\",\"proxy_name\":\"proxy_proxy_name__uyT-9\",\"socketStatus\":\"proxy_socketStatus__vIKNO\",\"proxy_flex\":\"proxy_proxy_flex__PdFUj\",\"status_point\":\"proxy_status_point__PAbm9\",\"statusOffLine\":\"proxy_statusOffLine__wTzdT\",\"proxy_status\":\"proxy_proxy_status__iyyuJ\",\"descript_container\":\"proxy_descript_container__-DOCh\",\"proxy_store\":\"proxy_proxy_store__rxh1L\",\"proxy_num\":\"proxy_proxy_num__ktRA0\",\"annoceMent_container\":\"proxy_annoceMent_container__yLNhY\",\"title\":\"proxy_title__41VAZ\",\"content\":\"proxy_content__VsBJK\",\"insert_element\":\"proxy_insert_element__b8SPa\"};"],"names":["service","axios","baseURL","process","timeout","interceptors","request","use","config","headers","Nprogress","error","console","log","Promise","reject","response","res","data","code","Toast","msg","uploadFastImg","params","getOnlineAgent","getAgentNotice","addReport","loadCusOrderDetail","changeOrderStatus","useAppDispatch","useDispatch","useAppSelector","useSelector","proxyStatusMsg","close","offLine","trading","useState","visible","setVisible","noAgentVisiable","setNoAgentVisiable","noOrderAndAgent","setNoOrderAndAgent","noticeContent","setNoticeContent","proxUserList","setProUserList","headFastUrl","setHeadFastUrl","onLineStatus","setOnLineStatus","useLocation","search","pathname","searchParams","URLSearchParams","navigate","useNavigate","dispatch","factUser","useMemo","temp","forEach","itm","inx","push","id","avatar","headImage","name","className","styles","Number","description","realOrderCount","fakeOrderCount","status","proxyName","handleChooseProxy","proxyInfo","type","proxyId","get","Dialog","confirmText","content","String","onConfirm","loadProxyList","orderNumber","orderAmount","orderType","fromUserId","switchState","agent","fastUrl","isOnline","loadProxynotice","notice","handleback","window","WebLocalBridge","rechargeBack","webkit","messageHandlers","JsToOc","postMessage","regOrderDetail","resp","tempArr","order","length","indexOf","cancelOrder","merchantOrderId","payStatus","useEffect","onBack","map","user","prefix","src","style","borderRadius","fit","width","height","arrow","onClick","dangerouslySetInnerHTML","__html","closeOnAction","onClose","actions","key","text"],"sourceRoot":""}